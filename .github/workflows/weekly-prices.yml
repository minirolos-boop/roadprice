name: Weekly Prices Monitor

on:
  schedule:
    - cron: "0 16 * * *"         # exécution quotidienne 05:00 UTC (≈ 06h FR en hiver)
  workflow_dispatch: {}

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    env:
      ALERT_PCT: "0.10"
      ALERT_EUR: "150"
      SAME_DATE_MIN_EUR: "5"
      ARCHIVE_KEEP: "32"        # <-- nb de snapshots à conserver
      SETUP_LFS: "true"         # <-- passe à "false" si tu préfères configurer LFS manuellement

    steps:
      - name: Checkout (with LFS)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      # Optionnel: configure Git LFS automatiquement si non présent
      - name: Configure Git LFS (one-time if needed)
        if: env.SETUP_LFS == 'true'
        run: |
          git lfs install --local
          # on track la DB et les archives compressées
          git lfs track "data/*.db"
          git lfs track "data/archive/*.gz"
          git add .gitattributes
          # pas de commit immédiat ici : l'étape auto-commit le fera plus bas

      - name: Set up Python (with pip cache)
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: requirements.txt

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run weekly monitor
        env:
          ALERT_PCT: ${{ env.ALERT_PCT }}
          ALERT_EUR: ${{ env.ALERT_EUR }}
          SAME_DATE_MIN_EUR: ${{ env.SAME_DATE_MIN_EUR }}
          WEROAD_TOKEN: ${{ secrets.WEROAD_TOKEN }}
        run: |
          mkdir -p data
          python monitor.py --out weekly_report.xlsx --sqlite data/weroad.db

      # --- ARCHIVE + ROTATION ---
      - name: Archive and rotate DB
        env:
          ARCHIVE_KEEP: ${{ env.ARCHIVE_KEEP }}
        run: |
          set -e
          mkdir -p data/archive
          # snapshot daté (UTC)
          DATE=$(date -u +%Y%m%d)
          SNAP="data/archive/weroad-${DATE}.db"
          cp -f data/weroad.db "${SNAP}"

          # compression pour LFS/poids
          gzip -f "${SNAP}"  # -> weroad-YYYYMMDD.db.gz

          # rotation : on garde seulement les ARCHIVE_KEEP plus récents
          ls -1t data/archive/*.db.gz 2>/dev/null | tail -n +$((ARCHIVE_KEEP+1)) | xargs -r rm -f

      - name: Build single-page dashboard (docs/index.md)
        run: python summarize.py

      - name: Commit dashboard, DB & archives
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update dashboard & history (index + db + archive)"
          file_pattern: |
            .gitattributes
            docs/index.md
            data/weroad.db
            data/archive/*.db.gz

      # artifacts (optionnel)
      - name: Upload Excel artifact
        uses: actions/upload-artifact@v4
        with:
          name: weekly_report
          path: weekly_report.xlsx
          retention-days: 30

      - name: Upload SQLite artifact
        uses: actions/upload-artifact@v4
        with:
          name: sqlite_snapshot
          path: data/weroad.db
          retention-days: 30
